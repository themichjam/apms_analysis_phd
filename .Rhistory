labs(title="Survey Makeup (2007) \n by Common Mental Disorder Group",
x = 'Respondant CMD Group',
y = 'Percentage',
fill = 'Condition',
caption = "(Test Footnote 2021)") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_text(size = 7), # change text size
axis.text.x = element_text(angle = 45, hjust=1)) + # angle text
#annotate("text", x = 9.3, y = .55, size = 3, label = "(total n = 7,403)") +
#annotate("text", x = 9.3, y = .50, size = 3, label = "n = 1,277")
annotate("text",
x = 2012.25,
y = 4.5,
label = paste("N: ", nrow(diag)))
# Common Mental Disorder Groups
subset_pms07 %>%
filter(diag != 'No disord') %>% # drop fct levels you dont want shown
drop_na() %>%
ggplot(aes(x = fct_infreq(diag),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
#scale_x_discrete(guide = guide_axis(n.dodge=2))+ # dodge labels from each other
#scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ # drop some overlapping text
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Common Mental Disorder Group",
x = 'Respondant CMD Group',
y = 'Percentage',
fill = 'Condition',
caption = "(Test Footnote 2021)") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_text(size = 7), # change text size
axis.text.x = element_text(angle = 45, hjust=1)) + # angle text
#annotate("text", x = 9.3, y = .55, size = 3, label = "(total n = 7,403)") +
#annotate("text", x = 9.3, y = .50, size = 3, label = "n = 1,277")
annotate("text",
x = 2012.25,
y = 2,
label = paste("N: ", nrow(diag)))
# Common Mental Disorder Groups
subset_pms07 %>%
filter(diag != 'No disord') %>% # drop fct levels you dont want shown
drop_na() %>%
ggplot(aes(x = fct_infreq(diag),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
#scale_x_discrete(guide = guide_axis(n.dodge=2))+ # dodge labels from each other
#scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ # drop some overlapping text
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Common Mental Disorder Group",
x = 'Respondant CMD Group',
y = 'Percentage',
fill = 'Condition',
caption = "(Test Footnote 2021)") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_text(size = 7), # change text size
axis.text.x = element_text(angle = 45, hjust=1)) + # angle text
#annotate("text", x = 9.3, y = .55, size = 3, label = "(total n = 7,403)") +
#annotate("text", x = 9.3, y = .50, size = 3, label = "n = 1,277")
annotate("text",
x = 2,
y = 2,
label = paste("N: ", nrow(diag)))
# Common Mental Disorder Groups
subset_pms07 %>%
filter(diag != 'No disord') %>% # drop fct levels you dont want shown
drop_na() %>%
ggplot(aes(x = fct_infreq(diag),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
#scale_x_discrete(guide = guide_axis(n.dodge=2))+ # dodge labels from each other
#scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ # drop some overlapping text
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Common Mental Disorder Group",
x = 'Respondant CMD Group',
y = 'Percentage',
fill = 'Condition',
caption = "(Test Footnote 2021)") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_text(size = 7), # change text size
axis.text.x = element_text(angle = 45, hjust=1)) + # angle text
#annotate("text", x = 9.3, y = .55, size = 3, label = "(total n = 7,403)") +
#annotate("text", x = 9.3, y = .50, size = 3, label = "n = 1,277")
annotate("text",
x = 2,
y = 2,
label = paste("N: ", nrow(subset_pms07$diag)))
# Common Mental Disorder Groups
subset_pms07 %>%
filter(diag != 'No disord') %>% # drop fct levels you dont want shown
drop_na() %>%
ggplot(aes(x = fct_infreq(diag),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
#scale_x_discrete(guide = guide_axis(n.dodge=2))+ # dodge labels from each other
#scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ # drop some overlapping text
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Common Mental Disorder Group",
x = 'Respondant CMD Group',
y = 'Percentage',
fill = 'Condition',
caption = "(Test Footnote 2021)") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_text(size = 7), # change text size
axis.text.x = element_text(angle = 45, hjust=1)) + # angle text
annotate("text", x = 9.3, y = .55, size = 3, label = "(total n = 7,403)") +
annotate("text", x = 9.3, y = .50, size = 3, label = "n = 1,277")
#install.packages if not already
# load libraries
install.packages("survey")
install.packages("srvyr")
pacman::p_load(skimr,
naniar,
gtsummary,
finalfit,
knitr,
tidyverse,
haven,
ggplot2,
forcats,
janitor,
survey,
srvyr)
# check packages
pacman::p_loaded()
class(wt_ints1)
# clear enviroment
rm(list = ls())
#install.packages if not already
# load libraries
install.packages("survey")
install.packages("srvyr")
install.packages("survey")
#install.packages if not already
# load libraries
pacman::p_load(skimr,
naniar,
gtsummary,
finalfit,
knitr,
tidyverse,
haven,
ggplot2,
forcats,
janitor,
survey,
srvyr)
class(wt_ints1)
# check packages
pacman::p_loaded()
# Read in 2007
source_pms07 <- haven::read_sav("2007 docs/apms07arch.sav",
user_na = TRUE) %>%
as_factor()
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","ResAge","trtment","eqvinc5","diag","CISRFOUR","ResSex","Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","eqvinc5",
"ptsdlong","PTSDarms","MajorT16","Psycdis_wt",
"bdpd_wt","aspd_wt","ASDwt") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
# remove source df
remove(source_pms07)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
#Then you write ~.x %in% na_strings - which reads as “does this
#value occur in the list of NA strings”.
subset_pms07 %>%
replace_with_na_all(condition = ~.x %in% na_strings)
# convert df back to factor
subset_pms07 %>% mutate_if(is.character, as.factor)
# Find total of variable
tabsum <- table(subset_pms07$age10yr)
addmargins(tabsum)
subset_pms07 %>%
as_survey(weights = c(wt_ints1)) %>%
group_by(diag) %>%
summarize(n = survey_total())
subset_pms07 %>%
as_survey(weights = c(wt_ints1)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
as.numeric(as.character(subset_pms07$wt_ints1))
class(wt_ints1)
subset_pms07&wt_ints1 <- as.numeric(as.character(subset_pms07$wt_ints1))
subset_pms07$wt_ints1 <- as.numeric(as.character(subset_pms07$wt_ints1))
exists(subset_pms07$wt_ints1)
class(subset_pms07$wt_ints1)
subset_pms07 %>%
as_survey(weights = c(wt_ints1)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
class(subset_pms07$psycdis_wt)
# change weights to numeric
subset_pms07$wt_ints1 <- as.numeric(as.character(subset_pms07$wt_ints1)) # phase 1 weight
class(subset_pms07$wt_ints1)
subset_pms07$psycdis_wt <- as.numeric(as.character(subset_pms07$psycdis_wt)) # weight to use with psycdis var
class(subset_pms07$psycdis_wt)
subset_pms07$bdpd_wt <- as.numeric(as.character(subset_pms07$bdpd_wt)) # Borderline personality disorder weight - use with bpdph2
class(subset_pms07$bdpd_wt)
subset_pms07$aspd_wt <- as.numeric(as.character(subset_pms07$aspd_wt))# Antisocial personality disorder weight - use with aspdph2
class(subset_pms07$aspd_wt)
subset_pms07 %>%
as_survey(weights = c(wt_ints1)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
subset_pms07 %>%
as_survey(weights = c(psycdis_wt)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
subset_pms07 %>%
as_survey(weights = c(bdpd_wt)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
subset_pms07 %>%
as_survey(weights = c(aspd_wt)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
# test
subset_pms07 %>%
as_survey(weights = c(wt_ints1)) %>%
group_by(res_sex) %>%
summarize(n = survey_total())
View(subset_pms07)
# without weighting
mean(subset_pms07&res_age, na.rm = T)
# without weighting
mean(subset_pms07$res_age, na.rm = T)
subset_pms07$res_age <- as.numeric(as.character(subset_pms07$res_age))
# without weighting
mean(subset_pms07$res_age, na.rm = T)
# With population weights
subset_pms07 %>%
as_survey(weights = c(wt_ints1)) %>%
summarize(lr_m = survey_mean(res_age, na.rm = T))
#install.packages if not already
# load libraries
pacman::p_load(skimr,
naniar,
gtsummary,
finalfit,
knitr,
tidyverse,
haven,
ggplot2,
forcats,
janitor,
survey,
srvyr)
# check packages
pacman::p_loaded()
# Read in 2007
source_pms07 <- haven::read_sav("2007 docs/apms07arch.sav",
user_na = TRUE) %>%
as_factor()
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","ResAge","trtment","eqvinc5","diag","CISRFOUR","ResSex","Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","eqvinc5",
"ptsdlong","PTSDarms","MajorT16","Psycdis_wt",
"bdpd_wt","aspd_wt","ASDwt") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
# remove source df
remove(source_pms07)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
#Then you write ~.x %in% na_strings - which reads as “does this
#value occur in the list of NA strings”.
subset_pms07 %>%
replace_with_na_all(condition = ~.x %in% na_strings)
# convert df back to factor
subset_pms07 %>% mutate_if(is.character, as.factor)
# Find total of variable
tabsum <- table(subset_pms07$age10yr)
addmargins(tabsum)
# Age
# change y to counts + add counts to bar + add n =
subset_pms07 %>%
drop_na() %>% # get rid of na from plot
ggplot(aes(x = (age10yr),
y = prop.table(stat(count)),
fill = fct_infreq(age10yr),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) + # make y % and no decimal
labs(title = "Survey Makeup (2007) \n by Age Group",
x = 'Respondant Age Group',
y = 'Percentage',
fill = 'Age Group',
caption = "(Test Footnote 2021)") + # footnote
annotate("text", x = 7, y = .2, size = 3, label = "n = 7,403") + # add total n = manually
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5)) # 0 = left, 0.5 = middle, 1 = right
# Find total of variable
tabsum <- table(subset_pms07$diag)
addmargins(tabsum)
7403 - 6126
# Renaming factor levels dplyr
subset_pms07$diag <- recode_factor(subset_pms07$diag,
"sev dep ep" = "Sev Dep",
"mild dep ep" = "Mild Dep",
"mod dep ep" = "Mod Dep",
"panic" = "Panic",
"social phob" = "Soc Phob",
"Spec iso phob" = "Specific Phob")
# Common Mental Disorder Groups
subset_pms07 %>%
filter(diag != 'No disord') %>% # drop fct levels you dont want shown
drop_na() %>%
ggplot(aes(x = fct_infreq(diag),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
#scale_x_discrete(guide = guide_axis(n.dodge=2))+ # dodge labels from each other
#scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ # drop some overlapping text
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Common Mental Disorder Group",
x = 'Respondant CMD Group',
y = 'Percentage',
fill = 'Condition',
caption = "(Test Footnote 2021)") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
#axis.text.x = element_text(size = 7), # change text size
axis.text.x = element_text(angle = 45, hjust=1)) + # angle text
annotate("text", x = 9.3, y = .55, size = 3, label = "(total n = 7,403)") +
annotate("text", x = 9.3, y = .50, size = 3, label = "n = 1,277")
