ggpubr,
gtsummary,
haven,
here,
janitor,
knitr,
naniar,
questionr,
reprex,
skimr,
srvyr,
survey,
tidyverse)
# check packages
pacman::p_loaded()
# Read in 2007
source_pms07 <- haven::read_sav("data/raw/apms07arch.sav",
user_na = TRUE) %>%
as_factor()
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","trtment","eqvinc5","diag","CISRFOUR","ResSex"                 ,"Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","ipsu_0714","istrata_0714",
"eqvinc5","ptsdlong","PTSDarms","MajorT16","ResAge",
"cluster","area") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"NA",
"N/A",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
#replace unwanted answers/typos with NA
subset_pms07 <- subset_pms07 %>%
mutate(across(everything(),
~ replace(., . %in% c("No answer/refused",
"NA",
"N/A",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable"), NA_character_))) %>%
type.convert(as.is = TRUE)
table(subset_pms07$acidever)
table(subset_pms07$diag)
str(subset_pms07)
#replace unwanted answers/typos with NA
subset_pms07 <- subset_pms07 %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
# clear enviroment
rm(list = ls())
#install.packages if not already
# load libraries
pacman::p_load(collapse,
finalfit,
forcats,
ggplot2,
ggpubr,
gtsummary,
haven,
here,
janitor,
knitr,
naniar,
questionr,
reprex,
skimr,
srvyr,
survey,
tidyverse)
# check packages
pacman::p_loaded()
# Read in 2007
source_pms07 <- haven::read_sav("data/raw/apms07arch.sav",
user_na = TRUE) %>%
as_factor()
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","trtment","eqvinc5","diag","CISRFOUR","ResSex"                 ,"Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","ipsu_0714","istrata_0714",
"eqvinc5","ptsdlong","PTSDarms","MajorT16","ResAge",
"cluster","area") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"NA",
"N/A",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
#replace unwanted answers/typos with NA
subset_pms07a <- subset_pms07 %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
table(subset_pms07$diag)
table(subset_pms07$acidever)
table(subset_pms07a$acidever)
# clear enviroment
rm(list = ls())
#install.packages if not already
# load libraries
pacman::p_load(collapse,
finalfit,
forcats,
ggplot2,
ggpubr,
gtsummary,
haven,
here,
janitor,
knitr,
naniar,
questionr,
reprex,
skimr,
srvyr,
survey,
tidyverse)
# check packages
pacman::p_loaded()
# Read in 2007
source_pms07 <- haven::read_sav("data/raw/apms07arch.sav",
user_na = TRUE) %>%
as_factor()
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","trtment","eqvinc5","diag","CISRFOUR","ResSex"                 ,"Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","ipsu_0714","istrata_0714",
"eqvinc5","ptsdlong","PTSDarms","MajorT16","ResAge",
"cluster","area") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"NA",
"N/A",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
# before na
table(subset_pms07$acidever)
#replace unwanted answers/typos with NA
subset_pms07 <- subset_pms07 %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
# check str after
table(subset_pms07$acidever)
table(subset_pms07$diag)
read.csv("data/raw/mess.csv")
read.csv(file = "data/raw/mess.csv")
messydf <- read.csv(file = "data/raw/mess.csv")
messydf <- read.csv(file = 'data/raw/mess.csv')
messydf <- read.csv(file = 'data/raw/mess.csv')
messydf <- read.csv(file = 'data/raw/mess.csv', sep=";")
View(messydf)
messydf <- read_csv("data/raw/mess.csv")
messydf <- read_csv("data/raw/mess.csv", skip = 2)
View(messydf)
# create messy df example
> employee <- c('John Doe','Peter Gynn','No answer')
# create messy df example
employee <- c('John Doe','Peter Gynn','No answer')
salary <- c(21000, 23400, <NA>)
salary <- c(21000, 23400, NA)
startdate <- as.Date(c('n/A','2008-3-25','2007-3-14'))
startdate <- c('n/A','2008-3-25','2007-3-14'))
startdate <- c(NA'2008-3-25','2007-3-14'))
startdate <- c('n/A','2008-3-25','2007-3-14')
# bind to df
employ.data <- data.frame(employee, salary, startdate)
# check str
str(employ.data)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer",
"NA",
"n/A")
# before na
table(employ.data)
# before na
table(employ.data$employee)
#replace unwanted answers/typos with NA
employ.data <- employ.data %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
# after na
table(employ.data$employee)
reprex()
# clear enviroment
rm(list = ls())
# create messy df example
employee <- c('John Doe','Peter Gynn','No answer')
salary <- c(21000, 23400, NA)
startdate <- c('n/A','2008-3-25','2007-3-14')
# bind to df
employ.data <- data.frame(employee, salary, startdate)
# check str
str(employ.data)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer",
"NA",
"n/A")
# before na
table(employ.data$employee)
#replace unwanted answers/typos with NA
employ.data <- employ.data %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
# after na
table(employ.data$employee)
reprex()
data()
load(AirPassengers)
data(AirPassengers)
force(AirPassengers)
# check str
head(AirPassengers, 5)
# check str
summary(AirPassengers)
data("airquality")
# check str
summary(airquality)
install.packages("NHANES")
# clear enviroment
rm(list = ls())
install.packages("NHANES")
library(NHANES)
library(dplyr)
#make a selection
nhanes_long <- NHANES %>% select(Age,AgeDecade,Education,Poverty,Work,LittleInterest,Depressed,BMI,Pulse,BPSysAve,BPDiaAve,DaysPhysHlthBad,PhysActiveDays)
#select 500 random indices
rand_ind <- sample(1:nrow(nhanes_long),500)
nhanes <- nhanes_long[rand_ind,]
summary(nhanes_long)
View(nhanes)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("None",
"NA",
"Several")
#replace unwanted answers/typos with NA
nhanes <- nhanes %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
View(nhanes)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("None",
"Some College",
"Several")
#replace unwanted answers/typos with NA
nhanes <- nhanes %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
# before NA replace
table(nhanes$Education)
# clear enviroment
rm(list = ls())
library(NHANES)
#make a selection
nhanes_long <- NHANES %>% select(Age,AgeDecade,Education,Poverty,Work,LittleInterest,Depressed,BMI,Pulse,BPSysAve,BPDiaAve,DaysPhysHlthBad,PhysActiveDays)
#select 500 random indices
rand_ind <- sample(1:nrow(nhanes_long),500)
nhanes <- nhanes_long[rand_ind,]
summary(nhanes_long)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("None",
"Some College",
"Several")
# before NA replace
table(nhanes$Education)
#replace unwanted answers/typos with NA
nhanes <- nhanes %>%
mutate(across(everything(),
~ replace(., . %in% c(na_strings), NA_character_))) %>%
type.convert(as.is = TRUE)
# after na
table(nhanes$Education)
reprex()
library(reprex)
install.packages("reprex")
install.packages("reprex")
library(reprex)
reprex()
# clear enviroment
rm(list = ls())
