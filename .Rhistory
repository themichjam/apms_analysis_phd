ggplot(aes(x = factor(cmdgroup),
y = prop.table(stat(count)),
fill = fct_infreq(sex),
label = scales::percent(prop.table(stat(count))))) +
geom_bar(position = "dodge") +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::percent) +
labs(title="Prevalance of 'Common Mental Disorders' (CMD) \n by Sex (2007)",
x = 'CMD Group',
y = 'Percentage', fill = 'Sex')
### CMD and Employment
subset_pms07 %>%
#filter(drugever != "No answer/refused") %>%
drop_na() %>%
ggplot(aes(x = fct_infreq(dvilo4a),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Drug Use",
x = 'Ever Taken Drugs',
y = 'Percentage',
fill = 'Drug Use',
caption = "(Test Footnote 2021)") +
annotate("text", x = 2.3, y = .7, size = 3, label = "n = 7,357") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
### CMD and Employment
subset_pms07 %>%
#filter(drugever != "No answer/refused") %>%
drop_na() %>%
ggplot(aes(x = fct_infreq(diag),
y = prop.table(stat(count)),
fill = fct_infreq(dvilo4a),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Drug Use",
x = 'Ever Taken Drugs',
y = 'Percentage',
fill = 'Drug Use',
caption = "(Test Footnote 2021)") +
annotate("text", x = 2.3, y = .7, size = 3, label = "n = 7,357") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
# plot cmd group x cisr score
subset_pms07 %>%
filter(!is.na(dvilo4a)) %>%
ggplot(aes(x = factor(diag),
y = prop.table(stat(count)),
fill = fct_infreq(dvilo4a),
label = scales::percent(prop.table(stat(count))))) +
geom_bar(position = "dodge") +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::percent) +
labs(title="Survey Makeup \n by CMD & CIS-R Score (2007)",
x = 'CMD Group',
y = 'Percentage', fill = 'CIS-R Score')
# cmd and ethnicity
subset_pms07 %>%
filter(!is.na(diag)) %>%
ggplot(aes(x = factor(ethnic5),
y = prop.table(stat(count)),
fill = fct_infreq(diag),
label = scales::percent(prop.table(stat(count))))) +
geom_bar(position = "dodge") +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::percent) +
labs(title="Survey Makeup \n by CMD & Ethnicity (2007)",
x = 'Ethnicity',
y = 'Percentage', fill = 'CMD Group')
knitr::opts_chunk$set(echo = TRUE)
# Ever Took Drugs
subset_pms07 %>%
filter(!edqual5 %in% c("Don't know", "No answer/refused", "Missing data")) %>%
drop_na() %>%
ggplot(aes(x = fct_infreq(drugever),
y = prop.table(stat(count)),
fill = fct_infreq(drugever),
label = scales::percent(prop.table(stat(count))))) +
geom_bar() +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
labs(title="Survey Makeup (2007) \n by Drug Use",
x = 'Ever Taken Drugs',
y = 'Percentage',
fill = 'Drug Use',
caption = "(Test Footnote 2021)") +
annotate("text", x = 2.3, y = .7, size = 3, label = "n = 7,357") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
# regression - provide model
mod1 <- glm(dvilo4a ~ diag + age10yr + edqual5,
data = subset_pms07,
family = binomial()
)
mod1 %>%
tbl_regression(exponentiate = TRUE) %>%
bold_labels() %>%
bold_p(t = .1)
View(subset_pms07)
# regression - provide model
mod1 <- glm(dvilo4a ~ diag + age20yr + edqual5,
data = subset_pms07,
family = binomial()
)
mod1 %>%
tbl_regression(exponentiate = TRUE) %>%
bold_labels() %>%
bold_p(t = .1)
summary(mod1)$coefficients
mod1 %>%
tbl_regression(exponentiate = TRUE) %>%
bold_labels() %>%
bold_p(t = .1)
warnings()
mod1 %>%
tbl_regression(exponentiate = TRUE) %>%
bold_labels() %>%
bold_p(t = .1) %>%
add_glance_source_note()
summary(mod1)$coefficients
# example model for code
# regression - provide model
mod1 <- glm(dvilo4a ~ diag + age10yr + edqual5,
data = subset_pms07,
family = binomial()
)
mod1 %>%
tbl_regression(exponentiate = TRUE) %>%
bold_labels() %>%
bold_p(t = .1)
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = dvilo4a, percent = "cell") %>%
add_p()
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p()
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = drugever, col = age20yr, percent = "cell") %>%
add_p()
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p(test = c(diag, age20yr) ~ "t.test",
test.args = c(diag, age20yr) ~ list(var.equal = TRUE))
## define custom test
fisher.test.simulate.p.values <- function(data, variable, by, ...) {
result <- list()
test_results <- stats::fisher.test(data[[variable]], data[[by]], simulate.p.value = TRUE)
result$p <- test_results$p.value
result$test <- test_results$method
result
}
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p(
test = list(all_categorical() ~ "fisher.test.simulate.p.values")  # this applies the custom test to all categorical variables
)
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p(
test = list(all_categorical() ~ "fisher.test.simulate.p.values")  # this applies the custom test to all categorical variables
)
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p()
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p(simulate.p.value=TRUE)
?add_p
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p(source_note = TRUE)
View(subset_pms07)
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","ResAge","trtment","eqvinc5","diag","CISRFOUR","ResSex","Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","ipsu_0714","istrata_0714","eqvinc5",
"ptsdlong","PTSDarms","MajorT16") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
# remove source df
remove(source_pms07)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
#Then you write ~.x %in% na_strings - which reads as “does this
#value occur in the list of NA strings”.
subset_pms07 %>%
replace_with_na_all(condition = ~.x %in% na_strings)
# convert df back to factor
subset_pms07 %>% mutate_if(is.character, as.factor)
# Find total of variable
tabsum <- table(subset_pms07$age10yr)
addmargins(tabsum)
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","ResAge","trtment","eqvinc5","diag","CISRFOUR","ResSex","Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","ipsu_0714","istrata_0714","eqvinc5",
"ptsdlong","PTSDarms","MajorT16") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
# clear enviroment
rm(list = ls())
#install.packages if not already
# load libraries
p_load(skimr,
naniar,
gtsummary,
finalfit,
knitr,
tidyverse,
haven,
ggplot2,
forcats,
janitor,
rmarkdown)
# check packages
p_loaded()
rmarkdown::render("2007 docs/testmd.Rmd")
# Read in 2007
source_pms07 <- haven::read_sav("2007 docs/apms07arch.sav",
user_na = TRUE) %>%
as_factor()
# Variables of interest subset 2007
subset_pms07 <- source_pms07 %>%
dplyr::select("pserial","ResAge","trtment","eqvinc5","diag","CISRFOUR","ResSex","Health6","Language","Age10yr",
"Age20yr","ETHNIC5","Origin","EDQUAL5","AnyQuals",
"HiQuals","ResMarDF",
"DVILO4a","DVPrac","Care1","Care2","Care3","Care4",
"Care5","Everwk","yearjbl","JbReas","Looked",
"YInAct","LookStop","LookSto2","Stat","Solo",
"HrsWeek","PTWkHour","EmpStY","LookNot1","LookNot2",
"LookNot3","DVLastWk","NotWk","WkShel1","HrsWork",
"LookSto3","DiffJob","WkShel2","WkShel3","SEmpStY",
"LookNow","LookAtAl","JobstM","EmpNo","Manage",
"FtPtWk","NotWk","SEG","SC","SrcInc1","SrcInc2",
"SrcInc3","SrcInc4","SrcInc5","SrcInc6","Gross4",
"Gross4a","Ten1","LLord","SF6","SF7","SF9","SF11",
"SF12","CONHOMD","IMon","FollUpGrp",
"eligible","Stage2","Origin","DVPrac","Care1","Care2",
"Care3","Care4","Care5","Medic","CnslHav","CnslTak",
"CnslLng","DocYear","DocPsyc","PMatNum","DocTalk",
"DocWeeks","InWhy","OutWhy","DayY","DayWht1",
"DayWht2","DayWht3","DayWht4","CC2aY",
"CC2Y1","CC2Y2","CC2Y3","CC2Y5","CC2Y6","CC2Y7",
"CC2Y8","CC2Y9","MentHos","Ten1","Gross4a","qimd",
"gor06","newsha","SF1","Happy","tenure","newten",
"hhdtype","DISsex","DISeth","DISrel","DISAge",
"DISmen","DISphy",
"DISsori","CISRFOUR","panic","GAD","madd","OCD",
"phob","dep","neurotic","nosymp","numdis",
"PTSDever","MajorT16","PTSDcom","PTSDPos",
"suicthwk","suicthyr","suicthlf","DSHlife",
"suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
"suihhos","suihcom","suihhel","suihoth","DSH5",
"DSHharm","DSH9","DSH10","PsycProb","Psycdis",
"Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
"DVADHD1","DVADHD2","DVADHD4","scoff2","EDImpact",
"bmigp4","DVAudit1","AUDITgp","DRNKPROB","SADQCSC",
"SADQGP","AUDSAD2","Cannever","Cannyear","AMPHEVER",
"AMPHYEAR","COCAEVER","CRACEVER","CRACYEAR",
"ECSTEVER","ECSTYEAR","HEROEVER","HEROYEAR",
"ACIDEVER","ACIDYEAR","MUSHEVER","MUSHYEAR",
"METHEVER","METHYEAR","TRANEVER","TRANYEAR",
"AMYLEVER","AMYLYEAR","ANABEVER",
"ANABYEAR","GLUEEVER","GLUEYEAR","DRUGEVER",
"DRUGYEAR","DRUGDEP",
"DRUGDEP2","GamYR","dsmscgr","dsmprob","dsmpath",
"numdiag","numdiag4","LCA","cluster1","cluster2",
"cluster3","cluster4","cluster5","cluster6",
"MedPsyc","MedDep","MedHyp","MedAnx","MedADHD",
"anymed","Doc2Wks","DocPsyc","INQTRMEN","OUTQTRME",
"PSYCTHER","COGTHER","ARTTHER","SOCTRAIN","MARITHER"
,"SEXTHER","COUNSEL","OTHTHER","OTHTHER","anyther",
"trtment","DAYCOMYR","PSYTRTYR","PSYLGTYR",
"CPNYR","CLDNYR","OTHNSEYR","SOCWRKYR","CPNYR",
"ERI3","SFQA","SFQB","SFQC","SFQD",
"SFQE","SFQF","SFQG","SFQH","DLSS4","DLSS5",
"PrimGrp","ChldInst","LACare","BothMaPa",
"YNotBoth","MaOrPa","AnyChild","NoChild",
"InDebt1","InDebt6",
"SFHELPYR","HMHELPYR","OREACHYR","anyccar","anyhlca"
,"anydaca","wt_ints1","ipsu_0714","istrata_0714","eqvinc5",
"ptsdlong","PTSDarms","MajorT16") %>%
janitor::clean_names() %>%
janitor::remove_empty("cols") %>%
janitor::remove_empty("rows") %>%
mutate(across(where(is.factor), as.character))
head(subset_pms07, 5)
subset_pms07 <-subset_pms07[,order(colnames(subset_pms07))] %>% rename_all(tolower)
# Check names
head(subset_pms07, 5)
table(subset_pms07$diag)
class(subset_pms07$diag)
# remove source df
remove(source_pms07)
table(subset_pms07$diag)
# Convert unwanted levels to NA
# write out all the offending strings of different NAs used
na_strings <- c("No answer/refused",
"Don't know",
"Missing data",
"Proxy",
"Item not applicable",
"No disord",
"Don't know",
"Item not applicable")
#Then you write ~.x %in% na_strings - which reads as “does this
#value occur in the list of NA strings”.
subset_pms07 %>%
replace_with_na_all(condition = ~.x %in% na_strings)
# convert df back to factor
subset_pms07 %>% mutate_if(is.character, as.factor)
# Find total of variable
tabsum <- table(subset_pms07$age10yr)
addmargins(tabsum)
table(subset_pms07$res_age)
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = age20yr, percent = "cell") %>%
add_p(test = c(res_age, diag) ~ "t.test",
test.args = c(res_age, diag) ~ list(var.equal = TRUE))
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = diag, col = res_age, percent = "cell") %>%
add_p()
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = res_age, col = diag, percent = "cell") %>%
add_p(test = c(res_age, diag) ~ "t.test",
test.args = c(res_age, diag) ~ list(var.equal = TRUE))
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = res_age, col = diag, percent = "cell")
# cross tab ex
tbl_cross_ex2 <-
subset_pms07 %>%
tbl_cross(row = res_age, col = diag, percent = "cell")
