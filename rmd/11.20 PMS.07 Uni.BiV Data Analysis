---
title: "0820 Data Analysis"
author: "Michelle K Jamieson"
date: "25/08/2020"
output:
  html_document:
    df_print: paged
    toc: true
    toc_float: true
    number_sections: true
    theme: flatly
    highlight: textmate

---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Introduction to the Data

Exploring a small section of the Psychiatric Morbidity Survey (2007).

```{r libraries}
# load libraries 
pacman::p_load(gmodels, 
               skimr, 
               knitr, 
               tidyverse, 
               haven, 
               psych,
               dplyr,
               synthpop,
               dataMaid,
               ggplot2)
```

## Reading in .CSV Data into R

The ```haven``` package can import datasets created by SPSS and a number other programs such as Stata and SAS.

There are a few features of SPSS datasets that require special handling when loading data into R. SPSS files often contain variables with both character labels and numeric codes that are not necessarily sequential (e.g. for the variable 'ever been in paid employment', 1 = item not applicable, 2 = yes, 3 = no, 4 = don't know, 5 = no answer/refused). SPSS also allows variables to have multiple, user-defined missing values. This sort of variable metadata is helpful, but it doesn’t quite align with any of R’s standard data types.

The ```haven``` package handles these differences by importing variables in a custom format called ```labelled``` and leaving the user to decide which of the numeric codes or value labels he or she wants to work with in R.

We’ll import the data using ```haven’s``` ```read_sav()``` function. We'll set ```user_na = TRUE``` to ensure that responses such as "Don't know" or "Refused" aren’t automatically converted to missing values. In this case, we also want to convert any labelled variables into factors so that we can work with value labels instead of the numeric codes (e.g. "yes" instead of "1"). We do this by piping ```(%>%)``` the entire dataset to ```haven's``` ```as_factor()``` function which converts any labelled variables in the dataset to factors.

```{r read in}
source_pms07 <- haven::read_sav("pms07.sav", 
                  user_na = TRUE) %>%
  as_factor()
```

## Subsetting the data

All original variables within the 2007 PMS we're interested in.  

```{r subset}
# Subsetting to manage descriptive, work, 
# and health variables
subset_pms07 <- source_pms07 %>% 
  dplyr::select("ResSex","Language","Age10yr","Age20yr","Ethinic4",
                "Edqual5","Anyquals","Hiquals","ResMarDF","DVILO3a",
                "Everwk","yearjbl"," FtPtWk","NotWk","SEG","SC",
                "Ten1","Gross4a","qimd","Gor06","Newsha","SF1",
                "Happy","Tenure","newten","hhdtype","DISsex",
                "DISeth","DISrel","DISage","DISmen","DISpsy",
                "DISori","CISRFOUR","panic","GAD","madd","OCD",
                "phob","dep","neurotic","nosymp","numdis",
                "PTSDever","MajorT16","PTSDcom","PTSDpos",
                "suicthwk","suicthyr","suicthlf","DSHlife",
                "suicatwk","suicatyr","suicatlf","DSHtry","suihfri",
                "suihhos","suihcom","suihhel","suihoth","DSH5",
                "DSHharm","DSH9","DSH10","PsycProb","Psycdis",
                "Psycdis_wt","BPDPH2","bdpd_wt","ASPDPH2","aspd_wt",
                "DVADHD1","DVADHD2","DVADHD4","scoff2","EDimpact",
                "bmigp4",

##
AUDITSC
AUDITGP
DRNKPROB
SADQCSC
SADQGP
AUDSAD2

CANNEVER
CANNYEAR
CANNDPSC
CANNDEP
CANNDEP2
AMPHEVER
AMPHYEAR
AMPHDPSC
AMPHDEP
COCAEVER
COCADEP
CRACEVER
CRACYEAR
CRACDPSC
CRACDEP
ECSTEVER
ECSTYEAR
ECSTDPSC
ECSTDEP
HEROEVER
HEROYEAR
ACIDEVER
ACIDYEAR
MUSHEVER
MUSHYEAR
METHEVER
METHYEAR
HEMEDPSC
HEMEDEP
TRANEVER
TRANYEAR
TRANDPSC
TRANDEP
AMYLEVER
AMYLYEAR
ANABEVER
ANABYEAR
GLUEEVER
GLUEYEAR
GLUEDPSC
GLUEDEP
DRUGEVER
DRUGYEAR
DRUGDEP
DRUGDEP2

GAMYR
DSMSCGR
DSMPROB
DSMPATH

NUMDIAG
NUMDIAG4
LCA
CLUSTER1
CLUSTER2
CLUSTER3
CLUSTER4
CLUSTER5
CLUSTER6

MEDPSYC
MEDDEP
MEDHYP
MEDANXI
MEDADD
ANYMED

DOC2WKS
DOCPSYC
INQTRMEN
OUTQTRME
PSYCTHER
COGTHER
ARTTHER
SOCTRAIN
MARITHER
SEXTHER
COUNSEL
OTHTHER
ANYTHER
TRTMENT
DAYCOMYR
PSYTRTYR
PSYLGTYR
CPNYRSeen
CLDNYR
OTHNSEYR
SOCWRKYR
SFHELPYR
HMHELPYR
OREACHYR
ANYCCAR
ANYHLCA
ANYDACA

WT_INTS1
POINT
STRATA
")

head(subset_pms07)
```

## Viewing the Data 

A nice way to view the subsetted dataset.

```{r view}
# view 
#subset_pms07 %>% sjPlot::view_df()# no longer needed
# makeCodebook now works after reading in 
# .csv with as.factor()
#makeCodebook(subset_pms07, vol = "6", 
#             reportTitle = NULL, file = NULL)

glimpse(subset_pms07)
```

# Understanding the Subset

Getting to grips with what's in the variables will help decide on meaningful analysis later on. 
```{r}
subset_pms07 %>%
  distinct(pserial)
subset_pms07 %>%
  distinct(ResSex)
subset_pms07 %>%
  distinct(ResAge)
subset_pms07 %>%
  distinct(SF1)
subset_pms07 %>%
  distinct(Happy)
subset_pms07 %>%
  distinct(Health6)
subset_pms07 %>%
  distinct(Everwk)
subset_pms07 %>%
  distinct(Psycdis)
```

## Cleaning Variable Names 

Making the variables easier to understand.

```{r variable names}
# look at variable names 
colnames(subset_pms07)

# rename variables for easier reading 
subset_pms07 <- subset_pms07 %>% 
  rename(SerNum = pserial, 
         Sex = ResSex, 
         Age = ResAge, 
         GenHeal = SF1, 
         HowHap = Happy,
         MenHeal = Health6, 
         Paidwk = Everwk,
         DefPsych = Psycdis) 

# check it worked 
colnames(subset_pms07)
```

## Reorganising ResAge Variable 

Could be handy to turn into a grouped variable for visualisation later on. 

```{r age restructure}

```


## Reorginising Work Variable

Collapsing the levels ```Item not applicable```, ```Don't know```, and ```No answer/refused``` into ```N/A``` would make later discriptives and visualisation tidier.

```{r work rest}
# correct for later 
# fct_collapse(Paidwk, Yes = c("Yes"), No = c("No"), # N/A = c("Item not applicable", "Don't know", "No # # answer/refused"))
# Error: unexpected '=' in "fct_collapse(Paidwk, Yes = c("Yes"), No = c("No"), N/A ="

```



# Descriptive Statistics 

## Respondant Sex Variable 

So this table tells us that 43.1% and 56.8% of the sample are male and female respectively, which sounds pretty reasonable.

```{r descriptive}
# overview of descriptives for df
#describe(subset_pms07)


# Sex variable first

# prop 
prop.table(table(subset_pms07$Sex))
```

## Age Respondant Variable 

The next step is to see if any age groups are over or under-represented in either of the genders. I’m going to use the package gmodels to produce these cross-tables:

```{r age descriptive}
#CrossTable(subset_pms07$Agegroup,
#           subset_pms07$Sex,prop.r=FALSE,prop.t=FALSE,
#           prop.chisq=FALSE)
```

## Mental Health Variable

Exploring the presence of poor mental health across genders, you would expect to see higher reporting in women, but a higher portion of psychosis diagnosed in men. 

From this we can see that more females (17, .04%) than males (6, .02%) reported an episode of psychosis in the past year.

```{r men hea ex}
CrossTable(subset_pms07$MenHeal,
           subset_pms07$Sex,prop.r=FALSE,prop.t=FALSE,
           prop.chisq=FALSE)

CrossTable(subset_pms07$DefPsych,
           subset_pms07$Sex,prop.r=FALSE,prop.t=FALSE,
           prop.chisq=FALSE)

```

## Employment 

From this we can see of those who had a paid job (39.9%), 23.1% mentioned a mental health condition.

We can see more females (47) than males (5) in a paid job mentioned having a mental health condition. More females who were not in a paid job (539) also mentioned having a mental health condition than men (236).

```{r empl disc}
prop.table(table(subset_pms07$Paidwk))
prop.table(table(subset_pms07$MenHeal))


# bar chart 
ggplot(subset_pms07,aes(x=Paidwk))+
  geom_bar()+
  facet_grid(~MenHeal)

# 2-Way Cross Tabulation
CrossTable(subset_pms07$Sex, subset_pms07$MenHeal)

# 3-Way Frequency Table
# gender by ever having a paid job and mentioned 
# having a mental health condition 
mytable <- table(subset_pms07$Sex, subset_pms07$Paidwk,
                 subset_pms07$MenHeal)
ftable(mytable)
```


# Visulisation 
## Age 

The largest group is males in the 40 - 50 age group.

```{r age vis}
#ggplot(subset_pms07,aes(x=Agegroup))+
#  geom_bar()+
#  facet_grid(~Sex)
```

## Mental Health
```{r men hea}
ggplot(subset_pms07,aes(x=MenHeal))+
  geom_bar()+
  facet_grid(~Sex)


# visualisation
ggplot(subset_pms07,aes(x=DefPsych))+
  geom_bar()+
  facet_grid(~Sex)
```

## Employment 

```{r empl vis}
# bar chart 
ggplot(subset_pms07,aes(x=Paidwk))+
  geom_bar()+
  facet_grid(~MenHeal)


```

# Tests of Independance 

E.g. Test the null hypothesis whether the respondants paid job status is independent of their psychosis diagnosis at .05 significant level. 

## Chi-Sqaure 

```{r chi}
# significance level.
chisq.test(subset_pms07$Paidwk, subset_pms07$DefPsych)
```

As the p-value 9.099 (#why has this changed from 1.263 from last time?) is greater than the .05 significance level, we do not reject the null hypothesis that the respondants paid job status is independent of their psychosis diagnosis.

## Correlations

```{r corrs}

```

## T-Tests

```{r tt}

```

## Futher Analysis 

```{r regs}

```

# Codebook

```{r cb}
makeCodebook(subset_pms07, vol = "8", 
             reportTitle = NULL, file = NULL)
```

